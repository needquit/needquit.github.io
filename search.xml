<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>N5105软路由AIO基础教程</title>
      <link href="/posts/2aa81fb0/"/>
      <url>/posts/2aa81fb0/</url>
      
        <content type="html"><![CDATA[<p>近些日子，因为pdd的500-100购物券，我果断入手了看重很久的N5105软路由，同时因为家境贫寒，所以选择了AIO的最低配置内存和硬盘，8GB内存条2666频率+小厂128G固态。</p><h2 id="ESXI-基础环境配置"><a href="#ESXI-基础环境配置" class="headerlink" title="ESXI 基础环境配置"></a>ESXI 基础环境配置</h2><p>咳咳，不水了，开始下面的教程。此处从ESXI安装完成后开始，进入ESXI的ip管理后台，输入账号和密码进入后台。然后在管理-硬件-PCI设备处将除第一个显示的网卡外开启直通。就比如我此处的有4个网卡，ID分别是02,03,04,05,将02外的三张网卡点击切换直通后，在他们的旁边会显示直通界面(如下图所示)，然后点击重新引导主机。</p><p><img src="https://img.gejiba.com/images/554bc3716f10c16347200220abc25fe6.png" alt="切换网卡直通"></p><p>接着依次点击网络-虚拟交换机-vswitch0，点击操作，编辑设置，在安全处将MAC地址更改为允许，其他两个随意。</p><p><img src="https://img.gejiba.com/images/d92e3ff1d55d439ebefb9e7453a687f6.png" alt="群晖设置MAC">然后在管理-系统-自动启动处点击编辑设置，将启动延迟和停止延迟设定数值小些，此处我设置为5秒。<img src="https://img.gejiba.com/images/f0e14d159ef074f6ae030dd185348670.png" alt="设置自动启动"></p><p>然后恭喜你，基础准备工作就做完了。</p><h3 id="创建iKuai虚拟机"><a href="#创建iKuai虚拟机" class="headerlink" title="创建iKuai虚拟机"></a>创建iKuai虚拟机</h3><p>接下来点击虚拟机，创建&#x2F;注册虚拟机，随便输入一个名字，此处我命名为iKuai。接着选择Linux和Linux3.x 64位，因为iKuai吃的资源比较多，所以此处分配两核cpu，3GB内存（最好给4GB，笔者此处因内存受限缘故，只给了3GB）和4GB硬盘空间，然后点击添加其他设备，PCI设备，此处因为我直通了三个网卡，所以添加三个即可。然后点击保存，接着再左键你创建的虚拟机，点击操作-编辑设置，在CD&#x2F;DVD驱动器1处将主机设备改为数据存储ISO文件，然后就会进入数据存储浏览器界面选择你创建的虚拟机名称的文件夹，如果没有则新创建一个。然后上载iKuai的系统ISO文件，点击保存。具体配置文件可以参考我的，接着即可启动虚拟机。<img src="https://img.gejiba.com/images/b6f53f64038445b2086b260a1ed0d5fc.png" alt="iKuai"></p><p>接着经过简单的系统安装操作后，即来到了iKuai的管理后台，在此处，我们首先要进行网卡绑定操作，此处我将第四个口设定为wan口，指令为set wan1 eth3，接着按回车保存，再输入q回到起始菜单。然后设置LAN&#x2F;WAN地址，填写LAN的ip地址，此处我将iKuai设为主路由所以填写了192.168.0.1。接着即可通过此ip进入iKuai后台管理，起始账号和密码都是admin。</p><h3 id="创建Openwrt虚拟机"><a href="#创建Openwrt虚拟机" class="headerlink" title="创建Openwrt虚拟机"></a>创建Openwrt虚拟机</h3><p>和之前一样，选择Linux和Linux3.x 64位，因为Openwrt的内存cpu吃的较少，所以我设定1核及1024MB内存。接着将硬盘，USB设备，CD&#x2F;DVD驱动器1删除，点击保存，再编辑设置，点击添加硬盘-现有硬盘，将openwrt的vmdk文件上传上去。因为我有docker之类的需求，将硬盘设为15GB点击保存，接着就可以点击保存。</p><p><img src="https://img.gejiba.com/images/847173cc846f1ffc5ae8b2a862fe960e.png" alt="Openwrt">然后打开虚拟机，经过短暂的等待，即进入到openwrt的管理界面，因为预设ip与我们需求不同，输入vim &#x2F;etc&#x2F;config&#x2F;network，再输入i进入写入模式，移动至ipaddr处，将ip设定为需求ip，因为我已设定iKuai为主路由，所以此处我将ip设定为192.168.0.2，再移动至下方，如果netmask已经是255.255.255.0，即不用变（不同类别地址的按需填写)。接着按下esc按键，输入:wq退出即可，然后在浏览器输入openwrt的ip，即可进入后台管理，默认无密码，点击登录即可。</p><h3 id="创建群晖虚拟机"><a href="#创建群晖虚拟机" class="headerlink" title="创建群晖虚拟机"></a>创建群晖虚拟机</h3><p>群晖的虚拟机则略微麻烦，首先找到你需求的群晖引导文件，此文拿DS918_6.2.3-25423文件举例。如果有刷白需求，则需要DiskGenius软件修改grub.cfg的sn和mac1(如果两网卡则还需修改mac2，如果有硬盘需求，则还需修改DiskIdxMap，SataPortMap，SataPortMap，如何配置可看文末)，然后将img格式文件转换为vmdk文件。接着同样选择Linux和Linux3.x 64位的虚拟机创建，将硬盘，SCSI控制器0，CD&#x2F;DVD驱动器1删除，将网络适配器的适配器类型选择为E1000e，并指定为洗白的群晖mac地址（不洗白则将MAC地址选择为自动）。接着再点击操作编辑设置，添加一块现有硬盘，将群晖的引导文件的vmdk上传上去选择，并点击左侧小三角，将控制器类型选为SATA控制器0，SATA(0:0），接着再添加一块新标准硬盘做为系统盘，此处我设定为60GB。同样的，点击左侧小三角，将控制器类型选择为SATA控制器0，SATA(0:1)点击保存即可。<img src="https://img.gejiba.com/images/5cc409166196806a425d4d4a9ff08877.png" alt="DS918">然后将虚拟机选项的引导选项中把是否为此虚拟机启用UEFI安全引导关闭。然后点击保存。</p><p><img src="https://img.gejiba.com/images/59193c378fd5bfe5aee31c249da1f190.png" alt="59193c378fd5bfe5aee31c249da1f190.png"></p><p>接着启动虚拟机,在启动界面选择SATA启动，然后在路由器的DHCP管理后台找到DiskStation的ip地址或者使用群晖助手，上传同版本的pat文件等待片刻即可。</p><p>文章中所用的文件<a href="https://cloud.189.cn/t/iUN3YrRf6Rbq">点我下载</a> (访问码:8bmj)</p><h3 id="三个参数说明"><a href="#三个参数说明" class="headerlink" title="三个参数说明"></a>三个参数说明</h3><blockquote><p>有关DiskIdxMap、SataPortMap、SasIdxMap三个参数的说明：</p><p> 1、在群辉系统中，一个控制器默认只能控制9个硬盘，所以SataPortMap&#x3D;的数值范围只能是0-   9，0则表示屏蔽该控制器，不可以设为SataPortMap&#x3D;0来隐藏引导盘！ </p><p> 2、如果有多个控制器的（每个主板具体有几个控制器，请查阅主板说明书），则SataPortMap&#x3D;后面的数值有几位就表示有几个控制器。比如SataPortMap&#x3D;148，表明第一个控制器有1个硬盘，第二个控制器有4个硬盘，第三个控制器有8个硬盘。 </p><p> 3、DiskIdxMap&#x3D;这个参数值，按顺序从左到右每两位数为一个控制器的盘序数值，这两位数为16进制数，如果数值小于等于9或者大于10的，需要在数值前面加个0。比如DiskIdxMap&#x3D;000105的意思是，第一个控制器的磁盘（引导盘）从序号1（00为序列1）开始往后排，第二个控制器的4个硬盘从序号2（01为序号2）开始往后排，第三个驱动器的8个硬盘从序号5（05为序号6）开始往后排。此时在群晖DSM7.X的系统里面看到磁盘序号就会从磁盘1（引导盘）到磁盘13。 </p><p> 4、这里有个小技巧，可以将控制器的盘序设置超过当前最大磁盘数量。例如我想把第1个控制器的引导盘隐藏，可以改成DiskIdxMap&#x3D;0C0004，引导盘在群晖系统里面就看不到了，此时在群晖DSM7.X的系统里面看到磁盘序号就会从磁盘1到磁盘12（引导盘被隐藏了），同时还治愈了很多患有强迫症的童鞋！ </p><p> 5、SasIdxMap为SAS硬盘的个数，使用SATA硬盘的时候默认设置为0。</p><p>引用自<a href="http://www.gebi1.com/thread-301421-1-1.html">http://www.gebi1.com/thread-301421-1-1.html</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 路由器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Openwrt </tag>
            
            <tag> Esxi </tag>
            
            <tag> iKuai </tag>
            
            <tag> synology </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Padavan在ap模式下的clash使用</title>
      <link href="/posts/e5ed0d3d/"/>
      <url>/posts/e5ed0d3d/</url>
      
        <content type="html"><![CDATA[<h2 id="首先准备一台已经刷完Padavan的路由器，这里以红米ac2100做演示"><a href="#首先准备一台已经刷完Padavan的路由器，这里以红米ac2100做演示" class="headerlink" title="首先准备一台已经刷完Padavan的路由器，这里以红米ac2100做演示"></a>首先准备一台已经刷完Padavan的路由器，这里以红米ac2100做演示</h2><p>我这里用的是hiboy的固件，版本号为3.4.3.9-099_22-07-1，可以在以下网址下载或更新固件。</p><blockquote><p><a href="https://opt.cn2qq.com/padavan/">Padavan 固件点此下载</a></p></blockquote><h3 id="进入路由器后台"><a href="#进入路由器后台" class="headerlink" title="进入路由器后台"></a>进入路由器后台</h3><p>然后将电脑的网线接口对准路由器的lan口，此时wan口有没有连接光猫或者主路由都无所谓。进入后台，此固件默认地址为<a href="http://192.168.123.1/">http://192.168.123.1</a>。进入后台后会提示输入账号和密码，此处默认为账号和密码都是admin，然后点击登录即可进入主页面(如下图所示)。</p><p><img src="https://s3.bmp.ovh/imgs/2022/08/11/e2cb8a91f5ab66ab.png" alt="后台主页图片"></p><h3 id="设置静态IP"><a href="#设置静态IP" class="headerlink" title="设置静态IP"></a>设置静态IP</h3><p>然后依次点击内部网络(LAN) -&gt; 内网设置。将自动获取IP地址关闭,(此处是为了防止做ap时主路由给此ap分配动态IP，这种做法还需要进入主路由后台查看IP分配)然后依次填写IP地址，子网掩码，默认网关。IP地址即你访问ap的后台的IP地址(注意此处不要与主路由的IP地址重复)，子网掩码保持默认255.255.255.0，默认网关则为主路由的后台的IP地址，填写后应用本页面设置。路由器会进行重启。</p><p><img src="https://s3.bmp.ovh/imgs/2022/08/11/e077606097ff401c.png" alt="内网静态IP"></p><h3 id="设置为AP工作模式"><a href="#设置为AP工作模式" class="headerlink" title="设置为AP工作模式"></a>设置为AP工作模式</h3><p>然后用上方填写的IP地址访问后台，登录后依次点击系统管理 -&gt; 操作模式，将无线路由器(默认)切换为无线接入点(AP),保存。 路由器将再次重启，即切换成AP工作模式。</p><p><img src="https://s3.bmp.ovh/imgs/2022/08/11/2fe4df17d8a6cc05.png" alt="设置为AP工作"></p><h3 id="将AP连接上网络"><a href="#将AP连接上网络" class="headerlink" title="将AP连接上网络"></a>将AP连接上网络</h3><p>此处仅展示5GHz无线桥接，2.4Ghz同理，此处不做演示。</p><p>依次点击无线 5GHz -&gt; 无线桥接，将无线AP工作模式选择为AP-Cilent + AP,在无线信道处填写主路由的无线信道，路由器如果没有设置个一般默认自动，此处需要手动指定信道，可以先用一些信道工具测试选择合适信道，此处不做演示。接着在上级SSID的右边点击刷新信号列表，等待一会后刷新页面可出现路由器搜寻到的WIFI信号。选择主路由SSID后授权模式和WPA加密默认即可，接着在WPA-PSK处填写WIFI密码后点击应用本页面设置等待片刻即可使AP路由器连接外网。</p><p><img src="https://s3.bmp.ovh/imgs/2022/08/11/e42158a00c6e71ff.png" alt="5GHz无线桥接"></p><h3 id="部署CLASH基本环境-小猫咪"><a href="#部署CLASH基本环境-小猫咪" class="headerlink" title="部署CLASH基本环境(小猫咪)"></a>部署CLASH基本环境(小猫咪)</h3><p>依次点击搭建Web环境 -&gt; clash,将clash开关，开启HTTP代理，开启SOCKS5代理，打开透明代理，打开后应用本页面设置，等待系统日志输出如下即可。</p><details class="toggle" ><summary class="toggle-button" style="">点击以打开</summary><div class="toggle-content"><p>Aug  7 17:30:08 【自定义脚本0】: 脚本完成<br>Aug  7 17:30:08 【WebUI】: UI 开关遍历状态监测<br>Aug  7 17:30:12 【opt】: opt 挂载正常：tmpfs<br>Aug  7 17:30:13 【mtd_storage.sh】: 保存 &#x2F;etc&#x2F;storage&#x2F; 内容到闪存！请勿关机<br>Aug  7 17:30:17 【clash】: 初始化 clash dns 配置<br>Aug  7 17:30:17 【mtd_storage.sh】: 保存 &#x2F;etc&#x2F;storage&#x2F; 内容到闪存！执行完成<br>Aug  7 17:30:19 【clash】: 变更 clash dns 端口 listen 0.0.0.0:8053 跳过自动开启第三方 DNS 程序但是继续把DNS绑定到 8053 端口的程序<br>Aug  7 17:30:20 【clash】: 初始化 clash 配置<br>Aug  7 17:30:21 【clash】: 允许局域网的连接<br>Aug  7 17:30:23 【clash】: HTTP 代理端口：7890<br>Aug  7 17:30:24 【clash】: SOCKS5 代理端口：7891<br>Aug  7 17:30:26 【clash】: redir 代理端口：7892<br>Aug  7 17:30:26 【clash】: 删除 Clash 配置文件中原有的 DNS 配置<br>Aug  7 17:30:30 【clash】: 设置日志输出: error<br>Aug  7 17:30:31 【clash】: 将 DNS 配置 &#x2F;tmp&#x2F;clash&#x2F;dns.yml 以覆盖的方式与 &#x2F;opt&#x2F;app&#x2F;clash&#x2F;config&#x2F;config.yaml 合并<br>Aug  7 17:30:31 【clash】: 初始化 clash 配置完成！实际运行配置：&#x2F;opt&#x2F;app&#x2F;clash&#x2F;config&#x2F;config.yaml<br>Aug  7 17:30:31 【clash】: api热重载配置<br>Aug  7 17:30:33 【clash】: api热重载配置，完成！<br>Aug  7 17:30:33 【clash】: 【自动】设置 ss_tproxy 配置文件，配置导入中…<br>Aug  7 17:30:34 【clash】: 【自动】设置 ss_tproxy 配置文件，完成配置导入<br>Aug  7 17:30:35 【sh_ss_tproxy.sh】: resolve_svraddr<br>Aug  7 17:30:40 【sh_ss_tproxy.sh】: stop<br>Aug  7 17:30:41 【ss_tproxy】: 运行 &#x2F;etc&#x2F;storage&#x2F;script&#x2F;sh_ss_tproxy.sh<br>Aug  7 17:30:41 【sh_ss_tproxy.sh】: start<br>Aug  7 17:30:42 【update_gfwlist】: 开始加载 gfwlist 规则….<br>Aug  7 17:30:42 【update_gfwlist】: 已经加载 gfwlist dns ipv4 规则 100%<br>Aug  7 17:30:45 【update_gfwlist】: 已经加载 gfwlist ipset 规则 100%<br>Aug  7 17:30:47 【update_gfwlist】: 配置更新，完成加载 gfwlist 规则….<br>Aug  7 17:30:47 【update_chnroute】: 开始加载 chnroute 规则….<br>Aug  7 17:30:48 【update_chnroute】: 配置更新，完成加载 chnroute 规则….<br>Aug  7 17:30:50 bwmon[2573]: Hostname: 192 (IP:192.168.2.12) found, but MAC  change to d6:27:72:69:5a:61<br>Aug  7 17:30:52 【ss_tproxy】: 启动成功<br>Aug  7 17:30:52 【ss_tproxy】: 守护进程启动</p></div></details><p> 如果出错，多半是opt环境下载出错，可以在配置拓展环境的自定义opt环境下载地址打勾，填入以下两个地址并应用本页面设置。</p><p> <strong>自定义 opt-file 下载地址:</strong> <a href="https://ghproxy.com/https://raw.githubusercontent.com/hiboyhiboy/opt-file/master">https://ghproxy.com/https://raw.githubusercontent.com/hiboyhiboy/opt-file/master</a></p><p> <strong>自定义 opt-script 下载地址:</strong> <a href="https://ghproxy.com/https://raw.githubusercontent.com/hiboyhiboy/opt-script/master">https://ghproxy.com/https://raw.githubusercontent.com/hiboyhiboy/opt-script/master</a></p><h3 id="CLASH部署节点订阅"><a href="#CLASH部署节点订阅" class="headerlink" title="CLASH部署节点订阅"></a>CLASH部署节点订阅</h3><p> 将机场的clash订阅粘贴至clash订阅链接处即可，随后进入Web管理界面，在clash页面下方的Web管理地址旁，如果未做过改动，也可以通过<a href="https://acl4ssr.netlify.com/">clash后台地址1</a>进入，进入后在设置的外部控制设置(也可能进来就会跳弹窗)，要求填写Host和端口，此处填写AP的IP地址和9090端口(如果是默认没改的前提)。如果正确设置界面的Socks5代理端口和HTTP代理端口都会显示正确端口号，否则空白。接着查看代理界面，如果填写了正确的订阅地址但在clash后台处仍没有节点选择即不支持clash，可以将通用订阅转换订阅至CLASH<a href="https://acl4ssr.netlify.com/">转换订阅</a>。有节点列表后根据规则选择对应节点即可。</p><p> 配置完后因为是AP的原因，无法使用透明代理(也可能是我操作问题但是没研究出来)，但可以使用系统自带的代理工具连接路由器。</p><h3 id="WINDOWS-10连接节点"><a href="#WINDOWS-10连接节点" class="headerlink" title="WINDOWS 10连接节点"></a>WINDOWS 10连接节点</h3><p> 按键盘上的WINDOWS按键 + ’I‘打开系统设置，在网络和Internet处找到代理，在手动设置代理处将使用代理服务器打开，填写AP的IP地址和HTTP代理端口即可连接外网。</p><h3 id="IOS-连接节点"><a href="#IOS-连接节点" class="headerlink" title="IOS 连接节点"></a>IOS 连接节点</h3><p> 在设置里找到无线局域网，部分地区机型可能是WI-FI，接着点击已连接的WIFI右边的感叹号，向下滑找到HTTP代理，将关闭改成手动，服务器为AP的IP地址，端口同上。</p><h3 id="因没有其他设备，所以此处不做演示，但道理等同，设置里摸索摸索即可"><a href="#因没有其他设备，所以此处不做演示，但道理等同，设置里摸索摸索即可" class="headerlink" title="因没有其他设备，所以此处不做演示，但道理等同，设置里摸索摸索即可"></a>因没有其他设备，所以此处不做演示，但道理等同，设置里摸索摸索即可</h3>]]></content>
      
      
      <categories>
          
          <category> 路由器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Padavan </tag>
            
            <tag> clash </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
